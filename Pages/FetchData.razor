@page "/fetchdata"
@inject HttpClient Http

<h1 class="text-4xl font-medium">Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table-fixed w-full mt-3">
        <thead>
            <tr class="border-t-2">
                <th class="w-1/4 text-left py-3 px-4">Date</th>
                <th class="w-1/4 text-left py-3 px-4">Temp. (C)</th>
                <th class="w-1/4 text-left py-3 px-4">Temp. (F)</th>
                <th class="w-1/4 text-left py-3 px-4">Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr class="border-t-2">
                    <td class="py-3 px-4">@forecast.Date.ToShortDateString()</td>
                    <td class="py-3 px-4">@forecast.TemperatureC</td>
                    <td class="py-3 px-4">@forecast.TemperatureF</td>
                    <td class="py-3 px-4">@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private WeatherForecast[] forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
